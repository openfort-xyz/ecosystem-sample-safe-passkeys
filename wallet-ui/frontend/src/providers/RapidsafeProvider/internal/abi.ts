export const WebAuthnValidator = [{ "inputs": [{ "internalType": "address", "name": "smartAccount", "type": "address" }], "name": "AlreadyInitialized", "type": "error" }, { "inputs": [], "name": "InvalidPublicKey", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "target", "type": "address" }], "name": "InvalidTargetAddress", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "smartAccount", "type": "address" }], "name": "NotInitialized", "type": "error" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "kernel", "type": "address" }, { "indexed": true, "internalType": "bytes32", "name": "authenticatorIdHash", "type": "bytes32" }, { "indexed": false, "internalType": "uint256", "name": "pubKeyX", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "pubKeyY", "type": "uint256" }], "name": "WebAuthnPublicKeyRegistered", "type": "event" }, { "inputs": [{ "internalType": "address", "name": "smartAccount", "type": "address" }], "name": "isInitialized", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "typeID", "type": "uint256" }], "name": "isModuleType", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "sender", "type": "address" }, { "internalType": "bytes32", "name": "hash", "type": "bytes32" }, { "internalType": "bytes", "name": "data", "type": "bytes" }], "name": "isValidSignatureWithSender", "outputs": [{ "internalType": "bytes4", "name": "", "type": "bytes4" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "bytes", "name": "_data", "type": "bytes" }], "name": "onInstall", "outputs": [], "stateMutability": "payable", "type": "function" }, { "inputs": [{ "internalType": "bytes", "name": "", "type": "bytes" }], "name": "onUninstall", "outputs": [], "stateMutability": "payable", "type": "function" }, { "inputs": [{ "components": [{ "internalType": "address", "name": "sender", "type": "address" }, { "internalType": "uint256", "name": "nonce", "type": "uint256" }, { "internalType": "bytes", "name": "initCode", "type": "bytes" }, { "internalType": "bytes", "name": "callData", "type": "bytes" }, { "internalType": "bytes32", "name": "accountGasLimits", "type": "bytes32" }, { "internalType": "uint256", "name": "preVerificationGas", "type": "uint256" }, { "internalType": "bytes32", "name": "gasFees", "type": "bytes32" }, { "internalType": "bytes", "name": "paymasterAndData", "type": "bytes" }, { "internalType": "bytes", "name": "signature", "type": "bytes" }], "internalType": "struct PackedUserOperation", "name": "_userOp", "type": "tuple" }, { "internalType": "bytes32", "name": "_userOpHash", "type": "bytes32" }], "name": "validateUserOp", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "payable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "kernel", "type": "address" }], "name": "webAuthnValidatorStorage", "outputs": [{ "internalType": "uint256", "name": "pubKeyX", "type": "uint256" }, { "internalType": "uint256", "name": "pubKeyY", "type": "uint256" }], "stateMutability": "view", "type": "function" }] as const
export const AddressRegistry = [{ "anonymous": false, "inputs": [{ "indexed": true, "internalType": "bytes32", "name": "userId", "type": "bytes32" }, { "indexed": true, "internalType": "address", "name": "safeAddress", "type": "address" }], "name": "AddressRegistered", "type": "event" }, { "inputs": [{ "internalType": "bytes32", "name": "userId", "type": "bytes32" }], "name": "getAddress", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "bytes32", "name": "userId", "type": "bytes32" }, { "internalType": "address", "name": "safeAddress", "type": "address" }], "name": "setAddress", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }], "name": "userIdToAddress", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }] as const
export const VaultManager = [{ "inputs": [], "stateMutability": "nonpayable", "type": "constructor" }, { "inputs": [{ "internalType": "address", "name": "target", "type": "address" }], "name": "AddressEmptyCode", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "implementation", "type": "address" }], "name": "ERC1967InvalidImplementation", "type": "error" }, { "inputs": [], "name": "ERC1967NonPayable", "type": "error" }, { "inputs": [], "name": "FailedCall", "type": "error" }, { "inputs": [], "name": "InvalidInitialization", "type": "error" }, { "inputs": [], "name": "NotInitializing", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }], "name": "OwnableInvalidOwner", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }], "name": "OwnableUnauthorizedAccount", "type": "error" }, { "inputs": [], "name": "ReentrancyGuardReentrantCall", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "token", "type": "address" }], "name": "SafeERC20FailedOperation", "type": "error" }, { "inputs": [], "name": "UUPSUnauthorizedCallContext", "type": "error" }, { "inputs": [{ "internalType": "bytes32", "name": "slot", "type": "bytes32" }], "name": "UUPSUnsupportedProxiableUUID", "type": "error" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "account", "type": "address" }, { "indexed": true, "internalType": "contract IERC20", "name": "token", "type": "address" }, { "indexed": true, "internalType": "contract IVault", "name": "vault", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "shares", "type": "uint256" }], "name": "Deposit", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "account", "type": "address" }, { "indexed": true, "internalType": "contract IYieldVault", "name": "vault", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "shares", "type": "uint256" }], "name": "DepositToYield", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "uint64", "name": "version", "type": "uint64" }], "name": "Initialized", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "previousOwner", "type": "address" }, { "indexed": true, "internalType": "address", "name": "newOwner", "type": "address" }], "name": "OwnershipTransferred", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "implementation", "type": "address" }], "name": "Upgraded", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "account", "type": "address" }, { "indexed": false, "internalType": "contract IVault[]", "name": "vaults", "type": "address[]" }, { "indexed": false, "internalType": "uint256[]", "name": "amounts", "type": "uint256[]" }], "name": "WithdrawSponsorToken", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "account", "type": "address" }, { "indexed": false, "internalType": "contract IVault[]", "name": "vaults", "type": "address[]" }, { "indexed": false, "internalType": "uint256[]", "name": "shares", "type": "uint256[]" }, { "indexed": true, "internalType": "bytes32", "name": "withdrawalId", "type": "bytes32" }], "name": "WithdrawalCompleted", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "account", "type": "address" }, { "indexed": false, "internalType": "contract IVault[]", "name": "vaults", "type": "address[]" }, { "indexed": false, "internalType": "uint256[]", "name": "shares", "type": "uint256[]" }, { "indexed": true, "internalType": "bytes32", "name": "withdrawalId", "type": "bytes32" }], "name": "WithdrawalQueued", "type": "event" }, { "inputs": [], "name": "UPGRADE_INTERFACE_VERSION", "outputs": [{ "internalType": "string", "name": "", "type": "string" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "", "type": "address" }, { "internalType": "contract IVault", "name": "", "type": "address" }], "name": "accountShares", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "", "type": "address" }, { "internalType": "uint256", "name": "", "type": "uint256" }], "name": "accountVaultList", "outputs": [{ "internalType": "contract IVault", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "contract IVault", "name": "vault", "type": "address" }], "name": "addVault", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "bytes32[]", "name": "withdrawalIds", "type": "bytes32[]" }], "name": "completeWithdrawals", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "contract IERC20", "name": "token", "type": "address" }, { "internalType": "contract IVault", "name": "vault", "type": "address" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }, { "internalType": "bool", "name": "isYield", "type": "bool" }], "name": "deposit", "outputs": [{ "internalType": "uint256", "name": "newShare", "type": "uint256" }], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "recipient", "type": "address" }, { "internalType": "contract IERC20", "name": "token", "type": "address" }, { "internalType": "contract IVault", "name": "vault", "type": "address" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }, { "internalType": "bool", "name": "isYield", "type": "bool" }], "name": "depositFor", "outputs": [{ "internalType": "uint256", "name": "newShare", "type": "uint256" }], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "contract IYieldVault", "name": "vault", "type": "address" }], "name": "depositToYield", "outputs": [{ "internalType": "uint256", "name": "newShares", "type": "uint256" }], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }, { "internalType": "contract IERC20", "name": "token", "type": "address" }], "name": "getAccountTokenBalance", "outputs": [{ "internalType": "uint256", "name": "balance", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "contract IERC20", "name": "token", "type": "address" }], "name": "getUnderlyingToVaultList", "outputs": [{ "internalType": "contract IVault[]", "name": "", "type": "address[]" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "bytes32", "name": "withdrawalId", "type": "bytes32" }], "name": "getWithdrawal", "outputs": [{ "components": [{ "internalType": "address", "name": "account", "type": "address" }, { "internalType": "contract IVault[]", "name": "vaults", "type": "address[]" }, { "internalType": "uint256[]", "name": "amounts", "type": "uint256[]" }, { "internalType": "uint256", "name": "startBlock", "type": "uint256" }, { "internalType": "uint256", "name": "nonce", "type": "uint256" }, { "internalType": "bool", "name": "completed", "type": "bool" }], "internalType": "struct IVaultManager.Withdrawal", "name": "", "type": "tuple" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }], "name": "getWithdrawalNonce", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "initialOwner", "type": "address" }, { "internalType": "contract IInvoiceManager", "name": "_invoiceManager", "type": "address" }, { "internalType": "uint256", "name": "_withdrawLockBlock", "type": "uint256" }], "name": "initialize", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [], "name": "invoiceManager", "outputs": [{ "internalType": "contract IInvoiceManager", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "owner", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "proxiableUUID", "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "contract IVault[]", "name": "vaults", "type": "address[]" }, { "internalType": "uint256[]", "name": "shares", "type": "uint256[]" }, { "internalType": "address", "name": "withdrawer", "type": "address" }], "name": "queueWithdrawals", "outputs": [{ "internalType": "bytes32", "name": "withdrawalId", "type": "bytes32" }], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "contract IVault", "name": "", "type": "address" }], "name": "registeredVaults", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "renounceOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "newOwner", "type": "address" }], "name": "transferOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "contract IERC20", "name": "", "type": "address" }, { "internalType": "uint256", "name": "", "type": "uint256" }], "name": "underlyingToVaultList", "outputs": [{ "internalType": "contract IVault", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "newImplementation", "type": "address" }, { "internalType": "bytes", "name": "data", "type": "bytes" }], "name": "upgradeToAndCall", "outputs": [], "stateMutability": "payable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }, { "internalType": "contract IVault", "name": "vault", "type": "address" }], "name": "vaultShares", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "withdrawLockBlock", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }, { "internalType": "contract IVault[]", "name": "vaults", "type": "address[]" }, { "internalType": "uint256[]", "name": "amounts", "type": "uint256[]" }, { "internalType": "address", "name": "receiver", "type": "address" }], "name": "withdrawSponsorToken", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "withdrawalNonces", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }], "name": "withdrawals", "outputs": [{ "internalType": "address", "name": "account", "type": "address" }, { "internalType": "uint256", "name": "startBlock", "type": "uint256" }, { "internalType": "uint256", "name": "nonce", "type": "uint256" }, { "internalType": "bool", "name": "completed", "type": "bool" }], "stateMutability": "view", "type": "function" }] as const
export const InvoiceManagerAbi = [{ "inputs": [], "stateMutability": "nonpayable", "type": "constructor" }, { "inputs": [{ "internalType": "address", "name": "target", "type": "address" }], "name": "AddressEmptyCode", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "implementation", "type": "address" }], "name": "ERC1967InvalidImplementation", "type": "error" }, { "inputs": [], "name": "ERC1967NonPayable", "type": "error" }, { "inputs": [], "name": "FailedCall", "type": "error" }, { "inputs": [], "name": "InvalidInitialization", "type": "error" }, { "inputs": [], "name": "NotInitializing", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }], "name": "OwnableInvalidOwner", "type": "error" }, { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }], "name": "OwnableUnauthorizedAccount", "type": "error" }, { "inputs": [], "name": "ReentrancyGuardReentrantCall", "type": "error" }, { "inputs": [], "name": "UUPSUnauthorizedCallContext", "type": "error" }, { "inputs": [{ "internalType": "bytes32", "name": "slot", "type": "bytes32" }], "name": "UUPSUnsupportedProxiableUUID", "type": "error" }, { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "uint64", "name": "version", "type": "uint64" }], "name": "Initialized", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "bytes32", "name": "invoiceId", "type": "bytes32" }, { "indexed": true, "internalType": "address", "name": "account", "type": "address" }, { "indexed": true, "internalType": "address", "name": "paymaster", "type": "address" }], "name": "InvoiceCreated", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "bytes32", "name": "invoiceId", "type": "bytes32" }, { "indexed": true, "internalType": "address", "name": "account", "type": "address" }, { "indexed": true, "internalType": "address", "name": "paymaster", "type": "address" }], "name": "InvoiceRepaid", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "previousOwner", "type": "address" }, { "indexed": true, "internalType": "address", "name": "newOwner", "type": "address" }], "name": "OwnershipTransferred", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "account", "type": "address" }, { "indexed": true, "internalType": "address", "name": "paymaster", "type": "address" }, { "indexed": true, "internalType": "contract IPaymasterVerifier", "name": "paymasterVerifier", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "expiry", "type": "uint256" }], "name": "PaymasterRegistered", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "account", "type": "address" }, { "indexed": true, "internalType": "address", "name": "paymaster", "type": "address" }, { "indexed": true, "internalType": "contract IPaymasterVerifier", "name": "paymasterVerifier", "type": "address" }], "name": "PaymasterRevoked", "type": "event" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "implementation", "type": "address" }], "name": "Upgraded", "type": "event" }, { "inputs": [], "name": "UPGRADE_INTERFACE_VERSION", "outputs": [{ "internalType": "string", "name": "", "type": "string" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "cabPaymasters", "outputs": [{ "internalType": "address", "name": "paymaster", "type": "address" }, { "internalType": "contract IPaymasterVerifier", "name": "paymasterVerifier", "type": "address" }, { "internalType": "uint256", "name": "expiry", "type": "uint256" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "uint256", "name": "nonce", "type": "uint256" }, { "internalType": "address", "name": "account", "type": "address" }, { "internalType": "bytes32", "name": "invoiceId", "type": "bytes32" }], "name": "createInvoice", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [], "name": "fallbackPaymasterVerifier", "outputs": [{ "internalType": "contract IPaymasterVerifier", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "bytes32", "name": "invoiceId", "type": "bytes32" }, { "components": [{ "internalType": "address", "name": "account", "type": "address" }, { "internalType": "uint256", "name": "nonce", "type": "uint256" }, { "internalType": "address", "name": "paymaster", "type": "address" }, { "internalType": "uint256", "name": "sponsorChainId", "type": "uint256" }, { "components": [{ "internalType": "contract IVault", "name": "vault", "type": "address" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }, { "internalType": "uint256", "name": "chainId", "type": "uint256" }], "internalType": "struct IInvoiceManager.RepayTokenInfo[]", "name": "repayTokenInfos", "type": "tuple[]" }], "internalType": "struct IInvoiceManager.InvoiceWithRepayTokens", "name": "invoice", "type": "tuple" }, { "internalType": "bytes", "name": "proof", "type": "bytes" }], "name": "fallbackRepay", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }], "name": "getCABPaymaster", "outputs": [{ "components": [{ "internalType": "address", "name": "paymaster", "type": "address" }, { "internalType": "contract IPaymasterVerifier", "name": "paymasterVerifier", "type": "address" }, { "internalType": "uint256", "name": "expiry", "type": "uint256" }], "internalType": "struct IInvoiceManager.CABPaymaster", "name": "", "type": "tuple" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "bytes32", "name": "invoiceId", "type": "bytes32" }], "name": "getInvoice", "outputs": [{ "components": [{ "internalType": "address", "name": "account", "type": "address" }, { "internalType": "uint256", "name": "nonce", "type": "uint256" }, { "internalType": "address", "name": "paymaster", "type": "address" }, { "internalType": "uint256", "name": "sponsorChainId", "type": "uint256" }], "internalType": "struct IInvoiceManager.Invoice", "name": "", "type": "tuple" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }, { "internalType": "address", "name": "paymaster", "type": "address" }, { "internalType": "uint256", "name": "nonce", "type": "uint256" }, { "internalType": "uint256", "name": "sponsorChainId", "type": "uint256" }, { "internalType": "bytes", "name": "repayTokenInfos", "type": "bytes" }], "name": "getInvoiceId", "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }], "stateMutability": "pure", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "initialOwner", "type": "address" }, { "internalType": "contract IVaultManager", "name": "_vaultManager", "type": "address" }, { "internalType": "contract IPaymasterVerifier", "name": "_fallbackPaymasterVerifier", "type": "address" }], "name": "initialize", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }], "name": "isInvoiceRepaid", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "owner", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "proxiableUUID", "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "paymaster", "type": "address" }, { "internalType": "contract IPaymasterVerifier", "name": "paymasterVerifier", "type": "address" }, { "internalType": "uint256", "name": "expiry", "type": "uint256" }], "name": "registerPaymaster", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [], "name": "renounceOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "bytes32", "name": "invoiceId", "type": "bytes32" }, { "components": [{ "internalType": "address", "name": "account", "type": "address" }, { "internalType": "uint256", "name": "nonce", "type": "uint256" }, { "internalType": "address", "name": "paymaster", "type": "address" }, { "internalType": "uint256", "name": "sponsorChainId", "type": "uint256" }, { "components": [{ "internalType": "contract IVault", "name": "vault", "type": "address" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }, { "internalType": "uint256", "name": "chainId", "type": "uint256" }], "internalType": "struct IInvoiceManager.RepayTokenInfo[]", "name": "repayTokenInfos", "type": "tuple[]" }], "internalType": "struct IInvoiceManager.InvoiceWithRepayTokens", "name": "invoice", "type": "tuple" }, { "internalType": "bytes", "name": "proof", "type": "bytes" }], "name": "repay", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [], "name": "revokePaymaster", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "newOwner", "type": "address" }], "name": "transferOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "newImplementation", "type": "address" }, { "internalType": "bytes", "name": "data", "type": "bytes" }], "name": "upgradeToAndCall", "outputs": [], "stateMutability": "payable", "type": "function" }, { "inputs": [], "name": "vaultManager", "outputs": [{ "internalType": "contract IVaultManager", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }, { "internalType": "contract IVault[]", "name": "repayTokenVaults", "type": "address[]" }, { "internalType": "uint256[]", "name": "repayAmounts", "type": "uint256[]" }], "name": "withdrawToAccount", "outputs": [], "stateMutability": "nonpayable", "type": "function" }] as const
